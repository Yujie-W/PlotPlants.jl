var documenterSearchIndex = {"docs":
[{"location":"#PlotPlants.jl","page":"Home","title":"PlotPlants.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Yujie's PlotPlants tool.","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using PlotPlants\n\n# use all the functions in the project\nuse_serif_tex();\nfig,axes = create_canvas(\"1\", ncol=2, nrow=2, ax_ind=[1,3,4]);\nset_titles!(axes);","category":"page"},{"location":"API/#PlotPlants","page":"API","title":"PlotPlants","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"CurrentModule = PlotPlants","category":"page"},{"location":"API/#Set-global-font","page":"API","title":"Set global font","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"The PyPlot package of Julia uses sans font by default, by my favorite font is     serif type. Also, some fonts do not have normal greek letters in their     library, like the Times only have italic greek letters. To change the     default font to serif and use normal greek letters, the PlotPlants package     provides a use_serif_tex function, which use LaTeX amsmath and     upgreek packages.","category":"page"},{"location":"API/","page":"API","title":"API","text":"use_serif_tex","category":"page"},{"location":"API/#PlotPlants.use_serif_tex","page":"API","title":"PlotPlants.use_serif_tex","text":"use_serif_tex()\n\nSet default font to serif and use latex wrapper for texts\n\n\n\n\n\n","category":"function"},{"location":"API/#Symbols-and-units","page":"API","title":"Symbols and units","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"To facilitate the use of LaTeX packages, functions latex_symbol and     latex_unit are provided to rapidly generate equation symbols and     units. By default,","category":"page"},{"location":"API/","page":"API","title":"API","text":"if the number of letters is one, the letter will be set to italic, otherwise,   the letters will be normal (not italic);\nif the letter is greek, the letter will be normal;\nall sub- and super-scripts are normal;","category":"page"},{"location":"API/","page":"API","title":"API","text":"latex_symbol\nlatex_unit","category":"page"},{"location":"API/#PlotPlants.latex_symbol","page":"API","title":"PlotPlants.latex_symbol","text":"latex_symbol(mid::String; sub::String, sup::String, presub::String, presup::String)\n\nReturn the latex symbol string, given\n\nmid Center symbol, italic only when length>1\nsub Optional: subscript after the mid\nsup Optional: supscript after the mid\npresub Optional: subscript before the mid\npresup Optional: supscript before the mid\n\n\n\n\n\n","category":"function"},{"location":"API/#PlotPlants.latex_unit","page":"API","title":"PlotPlants.latex_unit","text":"latex_unit(id::String; paren::Bool)\n\nReturn the unit, given\n\nid Identifier of the unit (if not in libary, use id as unit)\nparen Optional: if true, include parenthesis\nsquared Optional: if true, use [], otherwise, use ()\n\n\n\n\n\n","category":"function"},{"location":"API/#Create-canvas","page":"API","title":"Create canvas","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"An customized funtion create_canvas is provided to genrate figure and     axes from a few keywords. For example,","category":"page"},{"location":"API/","page":"API","title":"API","text":"create_canvas(fig_id) returns a figure with one axis;\ncreate_canvas(fig_id, nrow=2, ncol=2) returns a figure will four subplots;\ncreate_canvas(fig_id, nrow=2, ncol=2, ax_ind=[1,2,4]) returns a figure with   three subplot (the left bottom panel is empty);","category":"page"},{"location":"API/","page":"API","title":"API","text":"create_canvas","category":"page"},{"location":"API/#PlotPlants.create_canvas","page":"API","title":"PlotPlants.create_canvas","text":"create_canvas(id; ncol::Int, nrow::Int, ax_ind::Array{Int,1}, figsize::Tuple{Number,Number}, dpi::Number)\n\nCreate a canvas, given\n\nid ID of the figure\nncol Number of columns in the figure\nnrow Number of rows in the figure\nax_ind Given indicies of the subplots in the figure\nfigsize Given canvas size\ndpi Given pixels per inch\n\n\n\n\n\n","category":"function"},{"location":"API/#Add-titles","page":"API","title":"Add titles","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Function set_titles! will add panel titles like (a) to all the     panels, and if labels options is given, the labels will be added after     the letter (e.g., (a) label).","category":"page"},{"location":"API/","page":"API","title":"API","text":"set_titles!","category":"page"},{"location":"API/#PlotPlants.set_titles!","page":"API","title":"PlotPlants.set_titles!","text":"set_titles!(axes::Array; labels::Array{String,1}, paren::Bool, capital::Bool, fontsize::Number, loc::String)\n\nSet titles for the axes, given\n\naxes An array of axes\nlabels Optional: labels after the panel title, e.g., (a) label\nparen Optional: if true, use format like (a)\ncapital Optional: if true, use capital letters like (A)\nfontsize Optional: fontsize of the title\nloc Optional: location of the title\n\n\n\n\n\n","category":"function"},{"location":"API/#Add-regression","page":"API","title":"Add regression","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"To quickly plot the regression lines, users may use","category":"page"},{"location":"API/","page":"API","title":"API","text":"plot_line_regress","category":"page"},{"location":"API/#PlotPlants.plot_line_regress","page":"API","title":"PlotPlants.plot_line_regress","text":"plot_line_regress(ax, list_x::Array, list_y::Array; intercept::Bool, interval::Bool, color::String, alpha::Number)\n\nPlor linear regression and confidence interval on the axis, given\n\nax Given axis\nlist_x Array of x\nlist_y Array of y\nintercept Optional: if true, fit the data with an intercept\ninterval Optional: if true, plot the confidence interval of fitted y\ncolor Color the fitted curve\nalpha Transparency of the confidence interval (same color as curve)\n\n\n\n\n\n","category":"function"},{"location":"API/","page":"API","title":"API","text":"The function will filter out the NaN from the given data, make linear     regression using function line_regress, sort the results by the     value of x from low to high, store the results in a     LinearRegressionResult type struct, and plot the regression line     on the given axis. Also, if interval is set to true, the function will     also plot the confidence intervals of the predicted y.","category":"page"},{"location":"API/","page":"API","title":"API","text":"line_regress\nLinearRegressionResult","category":"page"},{"location":"API/#PlotPlants.line_regress","page":"API","title":"PlotPlants.line_regress","text":"line_regress(list_x::Array, list_y::Array; intercept::Bool, sorting::Bool)\n\nMake linear regression and return the fitted results, given\n\nlist_x Array of x, can be NaN\nlist_y Array of y, can be NaN\nintercept Optional: if true use intercept in the fitting\nsorting Optional: if true, fort the values\n\n\n\n\n\n","category":"function"},{"location":"API/#PlotPlants.LinearRegressionResult","page":"API","title":"PlotPlants.LinearRegressionResult","text":"mutable struct LinearRegressionResult\n\nFields\n\nlm\nRegression result\ninter\nIntercept of fitting\nslope\nSlope of fitting\ninter_p\nP value of intercept\nslope_p\nP value of slopes\ninter_ci\nConfidence interval of intercept\nslope_ci\nConfidence interval of slopes\ndf\nPredictions DataFrame\n\n\n\n\n\n","category":"type"}]
}
